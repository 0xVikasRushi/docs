import ts from 'typescript';
import { VirtualFiles, VirtualFile } from './plugin';
export declare type Diagnostic = {
    line: number;
    character: number;
    message: string;
} | {
    line?: undefined;
    character?: undefined;
    message: string;
};
export interface TranspiledFile extends VirtualFile {
    diagnostics: Array<Diagnostic>;
}
export declare type TranspiledFiles = Record<string, TranspiledFile>;
export interface ExternalResolution {
    resolvedPath: string;
    packageId: ts.PackageId;
}
export interface CompilerSettings {
    tsconfig: string;
    externalResolutions: Record<string, ExternalResolution>;
}
export declare class Compiler {
    private service;
    private compilerOptions;
    private compilerHost;
    constructor(settings: CompilerSettings);
    compile(files: VirtualFiles): Record<string, TranspiledFile>;
}
